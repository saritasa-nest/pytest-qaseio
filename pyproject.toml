[tool.poetry]
name = "pytest-qaseio"
description = "Pytest plugin for Qase.io integration"
version = "1.1.1"
license = "MIT"

authors = [
  "Saritasa <pypi@saritasa.com>",
]

readme = "README.md"

homepage = "https://pypi.org/project/pytest-qaseio/"
repository = "https://github.com/saritasa-nest/pytest-qaseio"

keywords = [
  "pytest",
  "qase",
  "qaseio",
  "selenium",
  "autotests",
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Framework :: Pytest",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Bug Tracking",
  "Topic :: Software Development :: Testing",
]

[tool.poetry.plugins."pytest11"]
pytest_qaseio = "pytest_qaseio.plugin"

[tool.poetry.dependencies]
python = "^3.10"
qaseio = ">=3.2.1,<5.0.0"
selenium = "^4.8.3"
arrow = "^1.2.3"
filelock = "^3.10.7"
pytest = "^7.2.2"

[tool.poetry.group.test.dependencies]
mypy = "^1.1.1"
safety = "^2.3.5"

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
# mypy configurations: https://mypy.readthedocs.io/en/latest/config_file.html
enable_error_code = [
  "truthy-bool",
  "redundant-expr",
  "unused-awaitable",
]

allow_redefinition = false
check_untyped_defs = true
disallow_any_explicit = true
disallow_any_generics = true
disallow_untyped_calls = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
local_partial_types = true
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_no_return = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true

[tool.isort]
# isort configuration:
# https://pycqa.github.io/isort/docs/configuration/options.html
line_length = 79
multi_line_output = 3
include_trailing_comma = true

[tool.flake8]
# https://www.flake8rules.com/
ignore = [
# https://www.flake8rules.com/rules/E126.html
  "E12",
# https://www.flake8rules.com/rules/W503.html
  "W503",
# https://www.flake8rules.com/rules/W504.html
  "W504",
# https://github.com/m-burst/flake8-pytest-style/blob/master/docs/rules/PT004.md
  "PT004",
# Missing docstring in public module
  "D100",
# Missing docstring in public method
  "D102",
# Missing docstring in public function
  "D103",
# Missing docstring in magic method
  "D105",
# Missing docstring in public nested
  "D106",
# Missing docstring in __init__
  "D107",
# Manually surrounded by quotes, consider using the `!r` conversion flag
  "B028",
]
inline-quotes = "double"
statistics = true
count = true
max-complexity = 10
max-line-length = 100
pytest-fixture-no-parentheses = true
pytest-parametrize-names-type = "list"
pytest-parametrize-values-type = "list"
pytest-parametrize-values-row-type = "list"
